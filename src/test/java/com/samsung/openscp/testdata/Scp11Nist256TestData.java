/*!
 * Copyright 2025 Samsung Electronics Co, Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.samsung.openscp.testdata;

import com.samsung.openscp.BytesUtils;

class Scp11Nist256TestData {
    static final byte[] GET_RESPONSE_OPERATION_CAPDU_EXPECTED = BytesUtils.hexToBytes("00C00000");

    static final byte[] GET_DATA_OPERATION_CAPDU_EXPECTED = BytesUtils.hexToBytes(
        "00CABF2106A6048302110300");
    static final byte[] GET_DATA_OPERATION_RAPDU_CHUNK_0 = BytesUtils.hexToBytes(
        "BF2182021430820210308201B5A00302010202146A994C23ECC7F71C16325F2CF93878D1B4327086300A06082A8648CE3D040302" +
        "3051310B3009060355040613024B52310B300906035504080C0253553110300E060355040A0C0753616D73756E67312330210603" +
        "5504030C1A43412D4B4C434320436572746966696361746520285445535429301E170D3235303230363130343634305A170D3236" +
        "303530393130343634305A304C310B3009060355040613024B52310B300906035504080C0253553110300E060355040A0C075361" +
        "6D73756E67311E301C06035504030C155344204365727469666963617465202854455354293059301306072A8648CE3D6100");
    static final byte[] GET_DATA_OPERATION_RAPDU_CHUNK_1 = BytesUtils.hexToBytes(
        "020106082A8648CE3D030107034200044F92A07D168C309959EED99E288381DD192979CD452D8FBE1F163447979207C5E6CD1F4D" +
        "D11609E2100C033BBD723BE78B71477E64883EB41EC366713E44AF1EA370306E301D0603551D0E04160414CD7B897E3C1BC6FFAC" +
        "7F9595FB55AE66C3CE84AB301F0603551D230418301680149E216D9AEF4531670A5B83ADE5DED7FF6CD97B0F300E0603551D0F01" +
        "01FF040403020308301C0603551D200101FF04123010300E060C2A864886FC6B64000A02010A300A06082A8648CE3D0403020349" +
        "003046022100AE0814C3B4C715BFCF4DA365944DA532B241C98227184C99364DE3DD2563E803022100D46AB8C79B47526100");
    static final byte[] GET_DATA_OPERATION_RAPDU_CHUNK_2 = BytesUtils.hexToBytes(
        "62B10487F0065CA8D720E3E275D87E516879DBE5CACDDE13559000");

    static final byte[] PERFORM_SECURITY_OPERATION_CAPDU_CHUNK_0_EXPECTED = BytesUtils.hexToBytes(
        "902A8310FF30820211308201B6A00302010202146DBC19AFE3782C7C0053F19E86DF2F0F00B559EA300A06082A8648CE3D040302" +
        "3051310B3009060355040613024B52310B300906035504080C0253553110300E060355040A0C0753616D73756E67312330210603" +
        "5504030C1A43412D4B4C4F4320436572746966696361746520285445535429301E170D3235303230363130323135365A170D3236" +
        "303530393130323135365A304D310B3009060355040613024B52310B300906035504080C0253553110300E060355040A0C075361" +
        "6D73756E67311F301D06035504030C164F4345204365727469666963617465202854455354293059301306072A8648CE3D020106" +
        "00");
    static final byte[] PERFORM_SECURITY_OPERATION_CAPDU_CHUNK_1_EXPECTED = BytesUtils.hexToBytes(
        "902A8310FF082A8648CE3D03010703420004B5C2598092609EFEFBA7A2FBED2F6E9142CA3882E7DE69D47D29476E7F0CE8507748" +
        "0CAC6AD5C156CE459F2592DA0EECDCB0DE2E8F112C9E49C4655A11C59620A370306E301D0603551D0E04160414E225C62F5E33CA" +
        "02D23D9D83D0685B4EB2FEBC11301F0603551D23041830168014851A6F60A6B45534647260877A357F3676C35686300E0603551D" +
        "0F0101FF040403020308301C0603551D200101FF04123010300E060C2A864886FC6B64000A020100300A06082A8648CE3D040302" +
        "0349003046022100A0D276B639EE863758B5568ADFA9D3B7F3D906A557C4C7675607FC82A9596EC6022100D7044BDE4CB536055C" +
        "00");
    static final byte[] PERFORM_SECURITY_OPERATION_CAPDU_CHUNK_2_EXPECTED = BytesUtils.hexToBytes(
        "802A031017F93D5C7FCF5C7C5298EB1D4646357CE6515BC0CD9E10FF00");
    static final byte[] PERFORM_SECURITY_OPERATION_RAPDU = BytesUtils.hexToBytes("9000");
}
